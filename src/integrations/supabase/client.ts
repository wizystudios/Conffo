
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://obijcwprhqyslfplnego.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9iaWpjd3ByaHF5c2xmcGxuZWdvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY4MDAzOTAsImV4cCI6MjA2MjM3NjM5MH0.Ry6g1QVdQVk8g0jRyes99cHWWD5N2ZwXh8U3_4gE2Sg";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  }
});

// Add some debugging for auth state changes
supabase.auth.onAuthStateChange((event, session) => {
  console.log('Auth state changed:', event, session?.user?.id);
});

// Helper functions to work with user follows until types are updated
export const addFollow = async (followerId: string, followingId: string) => {
  return supabase.rpc('add_follow', { 
    p_follower_id: followerId, 
    p_following_id: followingId 
  });
};

export const removeFollow = async (followerId: string, followingId: string) => {
  return supabase.rpc('remove_follow', { 
    p_follower_id: followerId, 
    p_following_id: followingId 
  });
};

export const checkIfFollowing = async (followerId: string, followingId: string) => {
  return supabase.rpc('check_if_following', { 
    follower_uuid: followerId, 
    following_uuid: followingId 
  });
};

export const getFollowersCount = async (userId: string) => {
  return supabase.rpc('get_followers_count', { user_uuid: userId });
};

export const getFollowingCount = async (userId: string) => {
  return supabase.rpc('get_following_count', { user_uuid: userId });
};
